@model AllGroupsQueryModel



@{
    ViewData["Title"] = "All Groups";
}

<!DOCTYPE html>
<html>
<head>
    <title></title>
</head>
<body>

    <div class="mt-3 text-center allGroups shadow-lg">
        <h1>All groups</h1>
        <hr></hr>
    </div>

    <form method="get">
        <div class="row mt-3 mb-4">
            <div class="form-group col-md-3 d-flex justify-content-between">
                <div class="form-group">
                    <label asp-for="Category"></label>
                    <select asp-for="Category" class="form-control">
                        <option value="">All</option>
                        @foreach (var category in Model.Categories)
                        {
                            <option value="@category">@category</option>
                        }
                    </select>
                </div>
            </div>

            <div class="form-group col-md-3">
                <label asp-for="SearchTerm"></label>
                <input asp-for="SearchTerm" class="form-control" placeholder="...">
            </div>

            <div class="form-group col-md-3">
                <div class="form-group">
                    <label asp-for="Sorting"></label>
                    <select asp-for="Sorting" class="form-control">
                        <option value="0">Most Joined</option>
                        <option value="1">With Most Posts</option>
                    </select>
                </div>
            </div>

            <div class="col-md-3">
                <div class="form-group mt-4 text-end">
                    <input type="submit" value="Search" class="btn btn-outline-dark btn-secondary px-5 searchButton" />
                </div>
            </div>
        </div>
    </form>


    @{
        var previousPage = Model.CurrentPage - 1;
        if (previousPage < 1)
        {
            previousPage = 1;
        }

        var maxPage = Math.Ceiling((double)Model.TotalGroupsCount /
        AllGroupsQueryModel.GroupsPerPage);
    }


    <div class="row mb-2">
        <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
            <a class="btn btn-secondary w-25 @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
               asp-controller="Group"
               asp-action="All"
               asp-route-currentPage="@previousPage"
               asp-route-category="@Model.Category"
               asp-route-searchTerm="@Model.SearchTerm"
               asp-route-sorting="@((int)Model.Sorting)"><<</a>
        </div>


        @{
            var shouldButtonBeDisabled = Model.CurrentPage == maxPage ||
            !Model.Groups.Any();
        }


        <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
            <a class="btn btn-secondary w-25
           @(shouldButtonBeDisabled ? "disabled" : string.Empty)"
               asp-controller="Group"
               asp-action="All"
               asp-route-currentPage="@(Model.CurrentPage + 1)"
               asp-route-category="@Model.Category"
               asp-route-searchTerm="@Model.SearchTerm"
               asp-route-sorting="@((int)Model.Sorting)">>></a>
        </div>
    </div>

    @if (!Model.Groups.Any())
    {
        <h2 class="text-center mt-5">
            No posts found by the given criteria!
        </h2>
    }

    <div class="mt-4">
        @foreach (var group in Model.Groups)
        {
            <partial name="_GroupFormPartial" model="@group" />
        }
    </div>

</body>
</html>

