@using BeSocial.Services.Interfaces
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IUserService userService
@inject IPremiumUserService premiumService


<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            @if (await userService.UserFullName(User.GetById()) is var fullName && fullName != null && await premiumService.PremiumUserWithUserIdExistsAsync(User.GetById()))
            {
                <a class="nav-link text-white">Hello, <i class="premiumText">@fullName!</i></a>
            }
            else if (await userService.UserFullName(User.GetById()) is var fullName2 && fullName != null && await premiumService.PremiumUserWithUserIdExistsAsync(User.GetById()) == false)
            {
                <a class="nav-link text-white">Hello, <i>@fullName2</i>!</a>
            }
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-white">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-white" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-white" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
